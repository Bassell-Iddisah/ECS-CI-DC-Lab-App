name: Deploy to ECR

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build with Maven
        run: mvn -B package --file pom.xml -DskipTests

#      - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: ${{ secrets.AWS_REGION }}

      - name: Configure AWS credentials using OidcProvider
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: "arn:aws:iam::495599742316:role/Github-OIDC-Role"
          aws-region: eu-central-1

      - name: Login to Amazon ECR
        id: ECR-login
        uses: aws-actions/amazon-ecr-login@v2

      - name: zip appspec.yml and taskdef.json and push to s3
        run: |
            zip app.zip appspec.yml taskdef.json
            
            aws s3 cp app.zip s3://${{ secrets.S3_BUCKET_NAME }}/app.zip

      - name: Configure AWS and Docker for image push
        run: |
          aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin 495599742316.dkr.ecr.eu-central-1.amazonaws.com

      - name: Build Docker Image
        run: |
          docker build -t 495599742316.dkr.ecr.eu-central-1.amazonaws.com/cicd-lab-stack-repository:latest .

      - name: Push docker image to ECR
        run: |
          docker push 495599742316.dkr.ecr.eu-central-1.amazonaws.com/cicd-lab-stack-repository